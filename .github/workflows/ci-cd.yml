name: CI/CD Pipeline

on:
  # Trigger on push to main branches
  push:
    branches: [main, master]
    # Trigger on version tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
  # Trigger on pull requests to main branches
  pull_request:
    branches: [main, master]
  
  # Allow manual triggering with optional tag input
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: false
        default: ''

jobs:
  # Build job to compile the TypeScript code
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      # Uncomment when you have tests
      # - name: Run tests
      #   run: npm test
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-node-${{ matrix.node-version }}
          path: dist/
          retention-days: 1

  # Release job to create GitHub release and publish to npm
  release:
    needs: build
    # Only run on tags or manual workflow dispatch with tag input
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '')
    runs-on: ubuntu-latest
    # Required permissions for creating releases
    permissions:
      contents: write
      id-token: write # For npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set release tag
        id: set_tag
        run: |
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            echo "RELEASE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
          echo "Release tag: $RELEASE_TAG"
      
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@thanasisale'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-node-20.x
          path: dist/
      
      - name: Install pkg
        run: npm install -g pkg
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create executables
        run: |
          mkdir -p executables
          # Update to use Node.js 18 (more recent than 16)
          pkg . --out-path=executables --public --targets=node18-linux-x64,node18-macos-x64,node18-win-x64
      
      - name: Debug release info
        run: |
          echo "Tag name: $RELEASE_TAG"
          echo "Files to include:"
          ls -la executables/
          echo "CHANGELOG.md exists:" 
          test -f CHANGELOG.md && echo "Yes" || echo "No"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: executables/*
          body_path: CHANGELOG.md
          tag_name: ${{ github.event.inputs.tag != '' && github.event.inputs.tag || github.ref_name }}
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish to npm
        # We always attempt to publish the package
        # If you want to skip npm publishing, set SKIP_NPM as a repository variable to 'true'
        run: |
          echo "Publishing package to npm registry"
          npm publish --access public || echo "npm publish failed, but continuing workflow"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
